# -*- mode: org; -*-
#+INCLUDE: theme/style.org
#+TITLE: Customization

* Customization

See also: http://www.aaronbedra.com/emacs.d/

**  Install Packages                       :customize:custom:install:package:

*** Install an Emacs package from repository:

To show the package lists type:

#+BEGIN_SRC
M-x list-packages
#+END_SRC



To install a single package

#+BEGIN_SRC

    M-x package-install <package-name>
    M-x package-install org-mode
    M-x package-install evil
#+END_SRC

*** Install a Single Emacs file *.el

#+BEGIN_SRC elisp

;;; Create the directory ~/.emacs.d/private
;;; mkdir -p ~/.emacs.d/private
;;;
(add-to-list 'load-path "~/.emacs.d/private")

(load-file "file.el")

;;; Or if it is a single package

(require 'package")

#+END_SRC

**  Hide / Show Emacs Widgets                   :customize:custom:widget:gui:

*Hide / Show Menu bar*

Hide Menu Bar

=(menu-bar-mode 0)=


Show Menu Bar

#+BEGIN_SRC

(menu-bar-mode 1)
#+END_SRC

*Hide / Show Toolbar*

Show Tool Bar

#+BEGIN_SRC

(tool-bar-mode 1)
#+END_SRC

Hide Tool Bar

#+BEGIN_SRC

(tool-bar-mode 0)
#+END_SRC


*Hide / Show Scroll Bar*

Show

#+BEGIN_SRC

(scroll-bar-mode 1)
#+END_SRC

Hide

#+BEGIN_SRC

(scroll-bar-mode -1)
#+END_SRC

**  Themes                                     :customize:custom:theme:color:

Load a color theme

#+BEGIN_SRC elisp

(load-theme 'wombat t)
#+END_SRC

List all available themes

#+BEGIN_SRC elisp

    ELISP> (custom-available-themes)
    (cyberpunk adwaita deeper-blue dichromacy leuven light-blue manoj-dark
    misterioso tango-dark tango tsdh-dark tsdh-light wheatgrass
    whiteboard wombat)

    or

    M-x custom-available-themes


    Print Color Theme Info (elisp code)

    ELISP> (color-theme-print)
    "Pretty printing current color theme function... done"

    or

    M-x color-theme-print
#+END_SRC

**  Misc
*** Disable/Enable Blink Cursor

Enable Blink Cursor

=(blink-cursor-mode 1)=

Stop Blink Cursor

=(blink-cursor-mode 0)=

*** Space / Tabs - Indentation

Set indentation with spaces instead of tabs with 4 spaces

#+BEGIN_SRC elisp

(setq tab-width 4 indent-tabs-mode nil)


;; set default tab char's display width to 4 spaces
(setq-default tab-width 4)
(setq-default indent-tabs-mode nil)

;; make tab key always call a indent command.
(setq-default tab-always-indent t)

;; make tab key call indent command or insert tab character, depending on cursor position
(setq-default tab-always-indent nil)

;; make tab key do indent first then completion.
(setq-default tab-always-indent 'complete)

#+END_SRC

*** Font Size and Type

=(set-default-font "Inconsolata 14")=

*** Character Encoding Default

#+BEGIN_SRC elisp

;; Character encodings default to utf-8.
(prefer-coding-system 'utf-8)

(set-language-environment 'utf-8)

(set-default-coding-systems 'utf-8)

(set-terminal-coding-system 'utf-8)

(set-selection-coding-system 'utf-8)
#+END_SRC

*** Disable / Enable Backup Files

Enable

=(setq make-backup-files t)=

Disable

=(setq make-backup-files nil)=

*** Type y/n instead of yes and no

=(defalias 'yes-or-no-p 'y-or-n-p)=

*** Show Match Parenthesis

#+BEGIN_SRC

ELISP> (show-paren-mode 1)
t
#+END_SRC

*Delete trailing whitespace before saving*

=(add-hook 'before-save-hook 'delete-trailing-whitespace)=

*** Quiet Startup

From: [[https://news.ycombinator.com/item?id=1654164][Ask HN Emacs Users: What's in your .emacs file?]]

#+BEGIN_SRC elisp

;; Don't display the 'Welcome to GNU Emacs' buffer on startup
(setq inhibit-startup-message t)

;; Display this instead of "For information about GNU Emacs and the
;; GNU system, type C-h C-a.". This has been made intentionally hard
;; to customize in GNU Emacs so I have to resort to hackery.
(defun display-startup-echo-area-message ()
  "If it wasn't for this you'd be GNU/Spammed by now"
  (message ""))

;; Don't insert instructions in the *scratch* buffer
(setq initial-scratch-message nil)
#+END_SRC

*** Set Default Web Browser

Set the default web browsr used by (browse-url <url>) function and by org-mode.

#+BEGIN_SRC elisp

 ;; Set the default web browser to Chromium Browsr
(setq browse-url-browser-function 'browse-url-generic
      browse-url-generic-program "chromium-browser")


#+END_SRC
